--------------------------------------------------------------------------------------------------
database
--------------------------------------------------------------------------------------------------
# create users table - phpmyadmin
CREATE TABLE `users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `email` varchar(255) NOT NULL,
  `password` varchar(255),
  `created_at` timestamp NULL,
  `updated_at` timestamp NULL,
  `date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1

--------------------------------------------------------------------------------------------------
packages
--------------------------------------------------------------------------------------------------
https://github.com/
    illuminate/database
    Respect/Validation
    slim/slim
    slim/twig-view
    slim/Slim-csrf
    slim/flash

--------------------------------------------------------------------------------------------------
autoload file
--------------------------------------------------------------------------------------------------
{
    "require": {
        "slim/slim": "^3.0",
        "slim/twig-view": "^2.2",
        "illuminate/database": "^5.4"
    },
    "autoload": {
        "psr-4": {
            "App\\": "app"
        }
    }
}

--------------------------------------------------------------------------------------------------
how to add middleware
--------------------------------------------------------------------------------------------------
- examples -

$container['csrf'] = function($container){

    return new \Slim\Csrf\Guard;

};

$app->add(new \App\Middleware\ValidationErrorsMiddleware($container));

$app->add(new \App\Middleware\OldInputMiddleware($container));

$app->add($container->csrf);

this link explains things pretty well in the how to use section -
https://github.com/slimphp/Slim-Csrf

--------------------------------------------------------------------------------------------------
scratch
--------------------------------------------------------------------------------------------------

var_dump($request->getParams()); <-- returns what gets passed through

// research best way to attack this ..

'password' => password_hash($request->getParam('password'), PASSWORD_DEFAULT, ['cost' => 10]),
